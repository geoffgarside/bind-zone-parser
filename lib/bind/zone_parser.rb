
# line 1 "lib/bind/zone_parser.rl"

# line 94 "lib/bind/zone_parser.rl"


module Bind
  class ZoneParser
    attr_reader :ttl, :origin

    def self.parse(zone)
      new.parse(zone)
    end
    def parse(zone)
      data = zone.unpack('c*')
      records = []
      record = {}

      
# line 21 "lib/bind/zone_parser.rb"
class << self
	attr_accessor :_bind_parser_actions
	private :_bind_parser_actions, :_bind_parser_actions=
end
self._bind_parser_actions = [
	0, 1, 0, 1, 2, 1, 3, 1, 
	4, 1, 5, 1, 6, 1, 7, 1, 
	8, 1, 9, 1, 10, 1, 11, 1, 
	12, 1, 13, 1, 14, 1, 15, 1, 
	16, 1, 17, 1, 18, 1, 19, 1, 
	20, 1, 21, 1, 22, 1, 23, 1, 
	24, 1, 25, 1, 26, 1, 29, 2, 
	1, 0, 2, 3, 15, 2, 4, 3, 
	2, 4, 18, 2, 4, 27, 2, 8, 
	29, 2, 9, 29, 2, 10, 29, 2, 
	11, 29, 2, 13, 2, 2, 13, 3, 
	2, 13, 4, 2, 13, 17, 2, 13, 
	18, 2, 14, 29, 2, 16, 29, 2, 
	17, 15, 2, 17, 29, 2, 18, 15, 
	2, 18, 28, 2, 18, 29, 2, 19, 
	2, 3, 1, 0, 2, 3, 4, 18, 
	29, 3, 4, 27, 29, 3, 13, 4, 
	3, 3, 13, 4, 18, 3, 13, 17, 
	29, 3, 13, 18, 29, 3, 17, 29, 
	15, 3, 18, 28, 29, 3, 18, 29, 
	15, 4, 13, 4, 18, 29
]

class << self
	attr_accessor :_bind_parser_key_offsets
	private :_bind_parser_key_offsets, :_bind_parser_key_offsets=
end
self._bind_parser_key_offsets = [
	0, 0, 4, 17, 22, 32, 35, 43, 
	46, 51, 54, 59, 62, 67, 74, 78, 
	79, 86, 91, 101, 108, 111, 112, 118, 
	121, 124, 125, 131, 134, 137, 138, 144, 
	147, 148, 149, 150, 151, 154, 164, 177, 
	189, 190, 193, 203, 204, 207, 212, 217, 
	218, 219, 220, 221, 222, 225, 235, 246, 
	256, 267, 271, 276, 283, 289, 296, 302, 
	309, 315, 322, 328, 334, 338, 343, 344, 
	347, 352, 353, 356, 361, 362, 365, 370, 
	371, 374, 379, 389, 399, 400, 401, 404, 
	408, 411, 416, 419, 421, 423, 425, 426, 
	427, 428, 429, 430, 433, 443, 456, 468, 
	469, 470, 473, 478, 485, 496, 508, 518, 
	529, 532, 543, 558, 564, 570, 576, 585, 
	593, 605, 617, 629, 641, 652, 669, 682, 
	693, 704, 716, 727, 740, 752, 763, 775, 
	780, 797, 810, 819, 828, 844, 855, 868, 
	879, 892, 903, 916, 929, 942, 954, 966, 
	978, 990, 1002, 1013, 1026, 1033, 1041, 1042, 
	1044, 1045, 1046, 1050, 1057, 1062, 1067, 1068, 
	1071, 1075, 1076, 1077, 1080, 1085, 1090, 1095, 
	1100, 1105, 1110, 1121, 1134, 1146, 1151, 1158, 
	1169, 1179, 1180, 1193, 1206, 1222, 1237, 1248, 
	1259, 1273, 1286, 1297, 1308, 1322, 1335, 1346, 
	1357, 1371, 1384, 1395, 1406, 1417, 1431, 1444, 
	1458, 1472, 1486, 1500, 1513, 1524, 1535, 1553, 
	1567, 1580, 1591, 1602, 1616, 1628, 1640, 1651, 
	1668, 1679, 1696, 1707, 1716, 1728, 1740, 1752, 
	1764, 1775, 1786, 1798, 1809, 1820, 1832, 1843, 
	1849, 1861, 1873, 1885, 1897, 1909, 1920, 1925, 
	1936, 1949, 1960, 1973, 1984, 1997, 2008, 2021, 
	2034, 2039, 2044, 2058, 2071, 2084, 2100, 2115, 
	2126, 2137, 2151, 2164, 2175, 2186, 2200, 2213, 
	2224, 2235, 2249, 2262, 2274, 2286, 2298, 2310, 
	2321, 2331, 2344, 2356, 2368, 2379, 2396, 2408, 
	2420, 2431, 2442, 2454, 2465, 2475, 2486, 2498, 
	2510, 2522, 2534, 2546, 2557, 2568, 2582, 2595, 
	2601, 2607, 2620, 2631, 2642, 2656, 2670, 2684, 
	2698, 2712, 2725, 2730, 2735, 2749, 2762, 2774, 
	2787, 2800, 2816, 2830, 2844, 2858, 2872, 2885, 
	2903, 2917, 2930, 2944, 2958, 2971, 2984, 2998, 
	3012, 3026, 3040, 3054, 3067, 3081, 3096, 3111, 
	3133, 3155, 3177, 3195, 3213, 3238, 3260, 3275, 
	3297, 3319, 3342, 3358, 3374, 3397, 3412, 3427, 
	3449, 3465, 3481, 3504, 3519, 3541, 3566, 3588, 
	3611, 3633
]

class << self
	attr_accessor :_bind_parser_trans_keys
	private :_bind_parser_trans_keys, :_bind_parser_trans_keys=
end
self._bind_parser_trans_keys = [
	32, 59, 9, 13, 32, 59, 65, 67, 
	73, 77, 78, 80, 84, 9, 13, 48, 
	57, 32, 9, 13, 48, 57, 32, 65, 
	67, 73, 77, 78, 80, 84, 9, 13, 
	32, 9, 13, 32, 50, 9, 13, 48, 
	49, 51, 57, 46, 48, 57, 50, 48, 
	49, 51, 57, 46, 48, 57, 50, 48, 
	49, 51, 57, 46, 48, 57, 50, 48, 
	49, 51, 57, 10, 32, 59, 9, 13, 
	48, 57, 32, 59, 9, 13, 10, 10, 
	32, 59, 9, 13, 48, 57, 10, 32, 
	59, 9, 13, 10, 32, 53, 59, 9, 
	13, 48, 52, 54, 57, 10, 32, 59, 
	9, 13, 48, 53, 46, 48, 57, 46, 
	46, 53, 48, 52, 54, 57, 46, 48, 
	53, 46, 48, 57, 46, 46, 53, 48, 
	52, 54, 57, 46, 48, 53, 46, 48, 
	57, 46, 46, 53, 48, 52, 54, 57, 
	46, 48, 53, 78, 65, 77, 69, 32, 
	9, 13, 32, 45, 9, 13, 48, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 9, 13, 48, 57, 65, 90, 97, 
	122, 10, 32, 45, 59, 9, 13, 48, 
	57, 65, 90, 97, 122, 78, 32, 9, 
	13, 32, 65, 67, 77, 78, 80, 83, 
	84, 9, 13, 88, 32, 9, 13, 32, 
	9, 13, 48, 57, 32, 9, 13, 48, 
	57, 83, 84, 82, 79, 65, 32, 9, 
	13, 32, 45, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 46, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 40, 9, 13, 32, 
	9, 13, 48, 57, 10, 32, 59, 9, 
	13, 48, 57, 32, 59, 9, 13, 48, 
	57, 10, 32, 59, 9, 13, 48, 57, 
	32, 59, 9, 13, 48, 57, 10, 32, 
	59, 9, 13, 48, 57, 32, 59, 9, 
	13, 48, 57, 10, 32, 59, 9, 13, 
	48, 57, 32, 59, 9, 13, 48, 57, 
	32, 41, 9, 13, 48, 57, 32, 41, 
	9, 13, 10, 32, 59, 9, 13, 10, 
	32, 9, 13, 32, 9, 13, 48, 57, 
	10, 32, 9, 13, 32, 9, 13, 48, 
	57, 10, 32, 9, 13, 32, 9, 13, 
	48, 57, 10, 32, 9, 13, 32, 9, 
	13, 48, 57, 32, 45, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 9, 
	13, 48, 57, 65, 90, 97, 122, 88, 
	84, 32, 9, 13, 32, 34, 9, 13, 
	10, 34, 92, 10, 32, 59, 9, 13, 
	10, 48, 57, 48, 57, 48, 57, 79, 
	84, 82, 73, 71, 73, 78, 32, 9, 
	13, 32, 45, 9, 13, 48, 57, 65, 
	90, 97, 122, 10, 32, 45, 46, 59, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 59, 9, 13, 48, 57, 
	65, 90, 97, 122, 84, 76, 32, 9, 
	13, 32, 9, 13, 48, 57, 10, 32, 
	59, 9, 13, 48, 57, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 65, 67, 73, 77, 78, 80, 84, 
	9, 13, 48, 57, 32, 45, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 9, 13, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	50, 65, 67, 73, 77, 78, 80, 84, 
	9, 13, 48, 49, 51, 57, 32, 46, 
	9, 13, 48, 57, 32, 46, 9, 13, 
	48, 57, 32, 46, 9, 13, 48, 57, 
	32, 46, 53, 9, 13, 48, 52, 54, 
	57, 32, 46, 9, 13, 48, 53, 54, 
	57, 32, 45, 46, 78, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	65, 9, 13, 48, 57, 66, 90, 97, 
	122, 32, 45, 46, 77, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	69, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 46, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 65, 67, 
	73, 77, 78, 80, 84, 9, 13, 48, 
	57, 66, 90, 97, 122, 10, 32, 45, 
	46, 59, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 59, 65, 67, 73, 77, 
	78, 80, 84, 9, 13, 32, 59, 65, 
	67, 73, 77, 78, 80, 84, 9, 13, 
	32, 45, 46, 78, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	65, 67, 73, 77, 78, 80, 83, 84, 
	9, 13, 48, 57, 32, 45, 46, 88, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 65, 67, 73, 77, 
	78, 80, 84, 9, 13, 48, 57, 32, 
	9, 13, 48, 57, 32, 45, 65, 67, 
	73, 77, 78, 80, 84, 9, 13, 48, 
	57, 66, 90, 97, 122, 10, 32, 45, 
	46, 59, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 50, 59, 9, 13, 48, 
	49, 51, 57, 32, 50, 59, 9, 13, 
	48, 49, 51, 57, 32, 50, 59, 65, 
	67, 73, 77, 78, 80, 84, 9, 13, 
	48, 49, 51, 57, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 50, 9, 13, 48, 49, 51, 57, 
	65, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 50, 9, 13, 48, 49, 51, 57, 
	65, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 50, 9, 13, 48, 49, 51, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 59, 65, 67, 73, 77, 78, 
	80, 84, 9, 13, 48, 57, 32, 45, 
	46, 83, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 84, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 82, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 88, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 84, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 34, 65, 
	67, 73, 77, 78, 80, 84, 9, 13, 
	48, 57, 45, 48, 57, 65, 90, 97, 
	122, 45, 46, 48, 57, 65, 90, 97, 
	122, 95, 116, 117, 99, 112, 32, 46, 
	9, 13, 32, 73, 83, 9, 13, 48, 
	57, 32, 9, 13, 48, 57, 32, 73, 
	83, 9, 13, 78, 32, 9, 13, 32, 
	83, 9, 13, 82, 86, 32, 9, 13, 
	32, 9, 13, 48, 57, 32, 9, 13, 
	48, 57, 32, 9, 13, 48, 57, 32, 
	9, 13, 48, 57, 32, 9, 13, 48, 
	57, 32, 9, 13, 48, 57, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 10, 32, 45, 46, 59, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 59, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 59, 9, 13, 45, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 9, 13, 48, 57, 65, 
	90, 97, 122, 100, 10, 32, 45, 46, 
	59, 9, 13, 48, 57, 65, 90, 97, 
	122, 10, 32, 45, 46, 59, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 53, 59, 9, 13, 48, 52, 
	54, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 9, 13, 48, 53, 54, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 46, 53, 9, 
	13, 48, 52, 54, 57, 65, 90, 97, 
	122, 32, 45, 46, 9, 13, 48, 53, 
	54, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 46, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 46, 53, 
	9, 13, 48, 52, 54, 57, 65, 90, 
	97, 122, 32, 45, 46, 9, 13, 48, 
	53, 54, 57, 65, 90, 97, 122, 32, 
	45, 46, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	53, 9, 13, 48, 52, 54, 57, 65, 
	90, 97, 122, 32, 45, 46, 9, 13, 
	48, 53, 54, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 46, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 46, 53, 9, 13, 48, 
	52, 54, 57, 65, 90, 97, 122, 32, 
	45, 46, 9, 13, 48, 53, 54, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 78, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 45, 46, 59, 65, 
	9, 13, 48, 57, 66, 90, 97, 122, 
	10, 32, 45, 46, 59, 77, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 69, 9, 13, 48, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 59, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 59, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 59, 65, 67, 73, 77, 78, 80, 
	84, 9, 13, 48, 57, 66, 90, 97, 
	122, 10, 32, 45, 46, 59, 78, 9, 
	13, 48, 57, 65, 90, 97, 122, 10, 
	32, 45, 46, 59, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 59, 65, 67, 
	77, 78, 80, 83, 84, 9, 13, 32, 
	59, 65, 67, 77, 78, 80, 83, 84, 
	9, 13, 32, 59, 65, 67, 73, 77, 
	78, 80, 83, 84, 9, 13, 48, 57, 
	32, 45, 46, 79, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 46, 65, 
	9, 13, 48, 57, 66, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 65, 67, 73, 
	77, 78, 80, 84, 9, 13, 48, 57, 
	66, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 65, 67, 73, 77, 78, 80, 84, 
	9, 13, 48, 57, 66, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 40, 50, 9, 13, 
	48, 49, 51, 57, 32, 45, 46, 78, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 65, 9, 13, 48, 57, 
	66, 90, 97, 122, 32, 45, 46, 77, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 69, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	40, 45, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 78, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 40, 65, 67, 77, 78, 80, 
	83, 84, 9, 13, 32, 45, 46, 88, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 40, 9, 13, 48, 
	57, 32, 45, 46, 83, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	84, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 46, 82, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	88, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 46, 84, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 34, 40, 9, 13, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 50, 9, 13, 48, 49, 51, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 50, 9, 13, 48, 49, 51, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 50, 9, 13, 48, 49, 51, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 50, 9, 13, 48, 49, 51, 
	57, 65, 90, 97, 122, 10, 32, 45, 
	46, 59, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 40, 59, 9, 13, 32, 
	40, 59, 9, 13, 32, 40, 59, 65, 
	67, 73, 77, 78, 80, 84, 9, 13, 
	48, 57, 10, 32, 45, 46, 59, 9, 
	13, 48, 57, 65, 90, 97, 122, 10, 
	32, 45, 46, 59, 9, 13, 48, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	53, 59, 9, 13, 48, 52, 54, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 9, 13, 48, 53, 54, 57, 65, 
	90, 97, 122, 32, 45, 46, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 46, 53, 9, 13, 48, 
	52, 54, 57, 65, 90, 97, 122, 32, 
	45, 46, 9, 13, 48, 53, 54, 57, 
	65, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 46, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 53, 9, 13, 
	48, 52, 54, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 53, 54, 
	57, 65, 90, 97, 122, 32, 45, 46, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 46, 53, 9, 
	13, 48, 52, 54, 57, 65, 90, 97, 
	122, 32, 45, 46, 9, 13, 48, 53, 
	54, 57, 65, 90, 97, 122, 32, 45, 
	46, 78, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 65, 9, 13, 
	48, 57, 66, 90, 97, 122, 32, 45, 
	46, 77, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 69, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 9, 13, 48, 57, 65, 
	90, 97, 122, 10, 32, 45, 46, 59, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 59, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 45, 46, 78, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 65, 67, 77, 
	78, 80, 83, 84, 9, 13, 48, 57, 
	66, 90, 97, 122, 32, 45, 46, 79, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 45, 46, 65, 9, 13, 48, 57, 
	66, 90, 97, 122, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	40, 45, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 88, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 45, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 45, 46, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 83, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 84, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 82, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 88, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	46, 84, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 45, 46, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 34, 45, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 46, 59, 88, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 59, 9, 13, 48, 
	57, 32, 59, 9, 13, 48, 57, 32, 
	59, 65, 67, 73, 77, 78, 80, 84, 
	9, 13, 48, 57, 32, 45, 46, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	45, 46, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 45, 46, 59, 83, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 46, 59, 84, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 82, 9, 13, 48, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 88, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 45, 46, 59, 84, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 46, 59, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 34, 59, 
	9, 13, 32, 34, 59, 9, 13, 32, 
	34, 59, 65, 67, 73, 77, 78, 80, 
	84, 9, 13, 48, 57, 10, 32, 45, 
	46, 59, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 45, 59, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 9, 13, 48, 57, 65, 
	90, 97, 122, 10, 32, 45, 46, 59, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 50, 59, 65, 67, 73, 77, 78, 
	80, 84, 9, 13, 48, 49, 51, 57, 
	10, 32, 45, 46, 59, 78, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 65, 9, 13, 48, 57, 
	66, 90, 97, 122, 10, 32, 45, 46, 
	59, 77, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 45, 46, 59, 69, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 46, 59, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 45, 59, 
	65, 67, 73, 77, 78, 80, 84, 9, 
	13, 48, 57, 66, 90, 97, 122, 10, 
	32, 45, 46, 59, 78, 9, 13, 48, 
	57, 65, 90, 97, 122, 10, 32, 45, 
	46, 59, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 59, 65, 67, 73, 77, 
	78, 80, 83, 84, 9, 13, 48, 57, 
	10, 32, 45, 46, 59, 88, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 59, 65, 67, 73, 
	77, 78, 80, 84, 9, 13, 48, 57, 
	10, 32, 45, 46, 59, 83, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 84, 9, 13, 48, 57, 
	65, 90, 97, 122, 10, 32, 45, 46, 
	59, 82, 9, 13, 48, 57, 65, 90, 
	97, 122, 10, 32, 45, 46, 59, 88, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 45, 46, 59, 84, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	45, 46, 59, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 34, 59, 65, 67, 
	73, 77, 78, 80, 84, 9, 13, 48, 
	57, 10, 32, 36, 45, 59, 64, 95, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	10, 32, 36, 45, 59, 64, 95, 9, 
	13, 48, 57, 65, 90, 97, 122, 10, 
	32, 36, 45, 59, 64, 65, 67, 73, 
	77, 78, 80, 84, 95, 9, 13, 48, 
	57, 66, 90, 97, 122, 10, 32, 36, 
	45, 59, 64, 65, 67, 73, 77, 78, 
	80, 84, 95, 9, 13, 48, 57, 66, 
	90, 97, 122, 10, 32, 36, 45, 59, 
	64, 65, 67, 73, 77, 78, 80, 84, 
	95, 9, 13, 48, 57, 66, 90, 97, 
	122, 10, 32, 36, 45, 50, 59, 64, 
	95, 9, 13, 48, 49, 51, 57, 65, 
	90, 97, 122, 10, 32, 36, 45, 50, 
	59, 64, 95, 9, 13, 48, 49, 51, 
	57, 65, 90, 97, 122, 10, 32, 36, 
	45, 50, 59, 64, 65, 67, 73, 77, 
	78, 80, 84, 95, 9, 13, 48, 49, 
	51, 57, 66, 90, 97, 122, 10, 32, 
	36, 45, 59, 64, 65, 67, 73, 77, 
	78, 80, 84, 95, 9, 13, 48, 57, 
	66, 90, 97, 122, 10, 32, 36, 45, 
	59, 64, 95, 9, 13, 48, 57, 65, 
	90, 97, 122, 10, 32, 36, 45, 59, 
	64, 65, 67, 77, 78, 80, 83, 84, 
	95, 9, 13, 48, 57, 66, 90, 97, 
	122, 10, 32, 36, 45, 59, 64, 65, 
	67, 77, 78, 80, 83, 84, 95, 9, 
	13, 48, 57, 66, 90, 97, 122, 10, 
	32, 36, 45, 59, 64, 65, 67, 73, 
	77, 78, 80, 83, 84, 95, 9, 13, 
	48, 57, 66, 90, 97, 122, 10, 32, 
	36, 40, 45, 59, 64, 95, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	36, 40, 45, 59, 64, 95, 9, 13, 
	48, 57, 65, 90, 97, 122, 10, 32, 
	36, 40, 45, 59, 64, 65, 67, 73, 
	77, 78, 80, 84, 95, 9, 13, 48, 
	57, 66, 90, 97, 122, 10, 32, 36, 
	45, 59, 64, 95, 9, 13, 48, 57, 
	65, 90, 97, 122, 10, 32, 36, 45, 
	59, 64, 95, 9, 13, 48, 57, 65, 
	90, 97, 122, 10, 32, 36, 45, 59, 
	64, 65, 67, 73, 77, 78, 80, 84, 
	95, 9, 13, 48, 57, 66, 90, 97, 
	122, 10, 32, 34, 36, 45, 59, 64, 
	95, 9, 13, 48, 57, 65, 90, 97, 
	122, 10, 32, 34, 36, 45, 59, 64, 
	95, 9, 13, 48, 57, 65, 90, 97, 
	122, 10, 32, 34, 36, 45, 59, 64, 
	65, 67, 73, 77, 78, 80, 84, 95, 
	9, 13, 48, 57, 66, 90, 97, 122, 
	10, 32, 36, 45, 59, 64, 95, 9, 
	13, 48, 57, 65, 90, 97, 122, 10, 
	32, 36, 45, 59, 64, 65, 67, 73, 
	77, 78, 80, 84, 95, 9, 13, 48, 
	57, 66, 90, 97, 122, 10, 32, 36, 
	45, 50, 59, 64, 65, 67, 73, 77, 
	78, 80, 84, 95, 9, 13, 48, 49, 
	51, 57, 66, 90, 97, 122, 10, 32, 
	36, 45, 59, 64, 65, 67, 73, 77, 
	78, 80, 84, 95, 9, 13, 48, 57, 
	66, 90, 97, 122, 10, 32, 36, 45, 
	59, 64, 65, 67, 73, 77, 78, 80, 
	83, 84, 95, 9, 13, 48, 57, 66, 
	90, 97, 122, 10, 32, 36, 45, 59, 
	64, 65, 67, 73, 77, 78, 80, 84, 
	95, 9, 13, 48, 57, 66, 90, 97, 
	122, 10, 32, 34, 36, 45, 59, 64, 
	65, 67, 73, 77, 78, 80, 84, 95, 
	9, 13, 48, 57, 66, 90, 97, 122, 
	0
]

class << self
	attr_accessor :_bind_parser_single_lengths
	private :_bind_parser_single_lengths, :_bind_parser_single_lengths=
end
self._bind_parser_single_lengths = [
	0, 2, 9, 1, 8, 1, 2, 1, 
	1, 1, 1, 1, 1, 3, 2, 1, 
	3, 3, 4, 3, 1, 1, 2, 1, 
	1, 1, 2, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 2, 5, 4, 
	1, 1, 8, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 3, 2, 
	3, 2, 1, 3, 2, 3, 2, 3, 
	2, 3, 2, 2, 2, 3, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 2, 2, 1, 1, 1, 2, 
	3, 3, 1, 0, 0, 2, 1, 1, 
	1, 1, 1, 1, 2, 5, 4, 1, 
	1, 1, 1, 3, 3, 8, 2, 3, 
	1, 3, 9, 2, 2, 2, 3, 2, 
	4, 4, 4, 4, 3, 9, 5, 9, 
	9, 4, 3, 9, 4, 3, 8, 1, 
	9, 5, 3, 3, 10, 3, 3, 3, 
	3, 3, 3, 5, 9, 4, 4, 4, 
	4, 4, 3, 9, 1, 2, 1, 2, 
	1, 1, 2, 3, 1, 3, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 3, 5, 4, 3, 1, 3, 
	2, 1, 5, 5, 6, 5, 3, 3, 
	4, 3, 3, 3, 4, 3, 3, 3, 
	4, 3, 3, 3, 3, 4, 3, 6, 
	6, 6, 6, 5, 3, 3, 10, 6, 
	5, 9, 9, 10, 4, 4, 3, 9, 
	3, 9, 3, 3, 4, 4, 4, 4, 
	3, 3, 4, 3, 9, 4, 3, 2, 
	4, 4, 4, 4, 4, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	3, 3, 10, 5, 5, 6, 5, 3, 
	3, 4, 3, 3, 3, 4, 3, 3, 
	3, 4, 3, 4, 4, 4, 4, 3, 
	2, 5, 4, 4, 3, 9, 4, 4, 
	3, 3, 4, 3, 2, 3, 4, 4, 
	4, 4, 4, 3, 3, 6, 5, 2, 
	2, 9, 3, 3, 6, 6, 6, 6, 
	6, 5, 3, 3, 10, 5, 4, 5, 
	5, 10, 6, 6, 6, 6, 5, 10, 
	6, 5, 10, 6, 5, 9, 6, 6, 
	6, 6, 6, 5, 10, 7, 7, 14, 
	14, 14, 8, 8, 15, 14, 7, 14, 
	14, 15, 8, 8, 15, 7, 7, 14, 
	8, 8, 15, 7, 14, 15, 14, 15, 
	14, 15
]

class << self
	attr_accessor :_bind_parser_range_lengths
	private :_bind_parser_range_lengths, :_bind_parser_range_lengths=
end
self._bind_parser_range_lengths = [
	0, 1, 2, 2, 1, 1, 3, 1, 
	2, 1, 2, 1, 2, 2, 1, 0, 
	2, 1, 3, 2, 1, 0, 2, 1, 
	1, 0, 2, 1, 1, 0, 2, 1, 
	0, 0, 0, 0, 1, 4, 4, 4, 
	0, 1, 1, 0, 1, 2, 2, 0, 
	0, 0, 0, 0, 1, 4, 4, 4, 
	4, 1, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 1, 1, 0, 1, 
	2, 0, 1, 2, 0, 1, 2, 0, 
	1, 2, 4, 4, 0, 0, 1, 1, 
	0, 1, 1, 1, 1, 0, 0, 0, 
	0, 0, 0, 1, 4, 4, 4, 0, 
	0, 1, 2, 2, 4, 2, 4, 4, 
	1, 4, 3, 2, 2, 2, 3, 3, 
	4, 4, 4, 4, 4, 4, 4, 1, 
	1, 4, 4, 2, 4, 4, 2, 2, 
	4, 4, 3, 3, 3, 4, 5, 4, 
	5, 4, 5, 4, 2, 4, 4, 4, 
	4, 4, 4, 2, 3, 3, 0, 0, 
	0, 0, 1, 2, 2, 1, 0, 1, 
	1, 0, 0, 1, 2, 2, 2, 2, 
	2, 2, 4, 4, 4, 1, 3, 4, 
	4, 0, 4, 4, 5, 5, 4, 4, 
	5, 5, 4, 4, 5, 5, 4, 4, 
	5, 5, 4, 4, 4, 5, 5, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 1, 1, 2, 4, 4, 4, 4, 
	4, 4, 4, 3, 4, 4, 4, 4, 
	4, 4, 4, 4, 1, 4, 4, 2, 
	4, 4, 4, 4, 4, 4, 1, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	1, 1, 2, 4, 4, 5, 5, 4, 
	4, 5, 5, 4, 4, 5, 5, 4, 
	4, 5, 5, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 2, 
	2, 2, 4, 4, 4, 4, 4, 4, 
	4, 4, 1, 1, 2, 4, 4, 4, 
	4, 3, 4, 4, 4, 4, 4, 4, 
	4, 4, 2, 4, 4, 2, 4, 4, 
	4, 4, 4, 4, 2, 4, 4, 4, 
	4, 4, 5, 5, 5, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 5, 4, 4, 
	4, 4
]

class << self
	attr_accessor :_bind_parser_index_offsets
	private :_bind_parser_index_offsets, :_bind_parser_index_offsets=
end
self._bind_parser_index_offsets = [
	0, 0, 4, 16, 20, 30, 33, 39, 
	42, 46, 49, 53, 56, 60, 66, 70, 
	72, 78, 83, 91, 97, 100, 102, 107, 
	110, 113, 115, 120, 123, 126, 128, 133, 
	136, 138, 140, 142, 144, 147, 154, 164, 
	173, 175, 178, 188, 190, 193, 197, 201, 
	203, 205, 207, 209, 211, 214, 221, 229, 
	236, 244, 248, 252, 258, 263, 269, 274, 
	280, 285, 291, 296, 301, 305, 310, 312, 
	315, 319, 321, 324, 328, 330, 333, 337, 
	339, 342, 346, 353, 360, 362, 364, 367, 
	371, 375, 380, 383, 385, 387, 390, 392, 
	394, 396, 398, 400, 403, 410, 420, 429, 
	431, 433, 436, 440, 446, 454, 465, 472, 
	480, 483, 491, 504, 509, 514, 519, 526, 
	532, 541, 550, 559, 568, 576, 590, 600, 
	611, 622, 631, 639, 651, 660, 668, 679, 
	683, 697, 707, 714, 721, 735, 743, 752, 
	760, 769, 777, 786, 796, 808, 817, 826, 
	835, 844, 853, 861, 873, 878, 884, 886, 
	889, 891, 893, 897, 903, 907, 912, 914, 
	917, 921, 923, 925, 928, 932, 936, 940, 
	944, 948, 952, 960, 970, 979, 984, 989, 
	997, 1004, 1006, 1016, 1026, 1038, 1049, 1057, 
	1065, 1075, 1084, 1092, 1100, 1110, 1119, 1127, 
	1135, 1145, 1154, 1162, 1170, 1178, 1188, 1197, 
	1208, 1219, 1230, 1241, 1251, 1259, 1267, 1282, 
	1293, 1303, 1314, 1325, 1338, 1347, 1356, 1364, 
	1378, 1386, 1400, 1408, 1415, 1424, 1433, 1442, 
	1451, 1459, 1467, 1476, 1484, 1495, 1504, 1512, 
	1517, 1526, 1535, 1544, 1553, 1562, 1570, 1575, 
	1583, 1592, 1600, 1609, 1617, 1626, 1634, 1643, 
	1653, 1658, 1663, 1676, 1686, 1696, 1708, 1719, 
	1727, 1735, 1745, 1754, 1762, 1770, 1780, 1789, 
	1797, 1805, 1815, 1824, 1833, 1842, 1851, 1860, 
	1868, 1875, 1885, 1894, 1903, 1911, 1925, 1934, 
	1943, 1951, 1959, 1968, 1976, 1983, 1991, 2000, 
	2009, 2018, 2027, 2036, 2044, 2052, 2063, 2073, 
	2078, 2083, 2095, 2103, 2111, 2122, 2133, 2144, 
	2155, 2166, 2176, 2181, 2186, 2199, 2209, 2218, 
	2228, 2238, 2252, 2263, 2274, 2285, 2296, 2306, 
	2321, 2332, 2342, 2355, 2366, 2376, 2388, 2399, 
	2410, 2421, 2432, 2443, 2453, 2466, 2478, 2490, 
	2509, 2528, 2547, 2561, 2575, 2596, 2615, 2627, 
	2646, 2665, 2685, 2698, 2711, 2731, 2743, 2755, 
	2774, 2787, 2800, 2820, 2832, 2851, 2872, 2891, 
	2911, 2930
]

class << self
	attr_accessor :_bind_parser_indicies
	private :_bind_parser_indicies, :_bind_parser_indicies=
end
self._bind_parser_indicies = [
	0, 2, 0, 1, 0, 2, 4, 5, 
	6, 7, 8, 9, 10, 0, 3, 1, 
	11, 11, 12, 1, 13, 4, 5, 6, 
	7, 8, 9, 10, 13, 1, 14, 14, 
	1, 14, 16, 14, 15, 17, 1, 18, 
	19, 1, 21, 20, 22, 1, 23, 22, 
	1, 25, 24, 26, 1, 27, 26, 1, 
	29, 28, 30, 1, 32, 31, 33, 31, 
	30, 1, 34, 2, 34, 1, 35, 2, 
	32, 31, 33, 31, 36, 1, 32, 31, 
	33, 31, 1, 32, 31, 37, 33, 31, 
	30, 36, 1, 32, 31, 33, 31, 36, 
	1, 27, 38, 1, 27, 1, 27, 39, 
	26, 38, 1, 27, 38, 1, 23, 40, 
	1, 23, 1, 23, 41, 22, 40, 1, 
	23, 40, 1, 18, 42, 1, 18, 1, 
	18, 43, 19, 42, 1, 18, 42, 1, 
	44, 1, 45, 1, 46, 1, 47, 1, 
	48, 48, 1, 48, 49, 48, 49, 49, 
	49, 1, 51, 50, 52, 53, 54, 50, 
	52, 52, 52, 1, 51, 50, 52, 54, 
	50, 52, 52, 52, 1, 55, 1, 56, 
	56, 1, 56, 4, 5, 7, 8, 9, 
	57, 10, 56, 1, 58, 1, 59, 59, 
	1, 59, 59, 60, 1, 61, 61, 62, 
	1, 63, 1, 64, 1, 65, 1, 66, 
	1, 67, 1, 68, 68, 1, 68, 69, 
	68, 69, 69, 69, 1, 70, 71, 72, 
	70, 71, 71, 71, 1, 73, 74, 73, 
	74, 74, 74, 1, 75, 76, 77, 75, 
	76, 76, 76, 1, 78, 79, 78, 1, 
	79, 79, 80, 1, 82, 81, 84, 81, 
	83, 1, 85, 87, 85, 86, 1, 89, 
	88, 91, 88, 90, 1, 92, 94, 92, 
	93, 1, 96, 95, 98, 95, 97, 1, 
	99, 101, 99, 100, 1, 103, 102, 105, 
	102, 104, 1, 106, 108, 106, 107, 1, 
	109, 110, 109, 111, 1, 112, 113, 112, 
	1, 114, 34, 2, 34, 1, 115, 108, 
	116, 116, 1, 116, 116, 107, 1, 117, 
	101, 118, 118, 1, 118, 118, 100, 1, 
	119, 94, 120, 120, 1, 120, 120, 93, 
	1, 121, 87, 122, 122, 1, 122, 122, 
	86, 1, 75, 76, 75, 76, 76, 76, 
	1, 70, 71, 70, 71, 71, 71, 1, 
	123, 1, 124, 1, 125, 125, 1, 125, 
	126, 125, 1, 1, 128, 129, 127, 131, 
	130, 132, 130, 1, 1, 133, 127, 134, 
	1, 127, 1, 135, 136, 1, 137, 1, 
	138, 1, 139, 1, 140, 1, 141, 1, 
	142, 142, 1, 142, 143, 142, 143, 143, 
	143, 1, 145, 144, 146, 147, 148, 144, 
	146, 146, 146, 1, 145, 144, 146, 148, 
	144, 146, 146, 146, 1, 149, 1, 150, 
	1, 151, 151, 1, 151, 151, 152, 1, 
	154, 153, 156, 153, 155, 1, 157, 158, 
	159, 157, 158, 158, 158, 1, 160, 4, 
	5, 6, 7, 8, 9, 10, 160, 3, 
	1, 157, 158, 157, 158, 158, 158, 1, 
	161, 158, 159, 161, 162, 158, 158, 1, 
	157, 157, 1, 163, 158, 159, 163, 158, 
	158, 158, 1, 164, 166, 4, 5, 6, 
	7, 8, 9, 10, 164, 165, 167, 1, 
	11, 18, 11, 168, 1, 11, 18, 11, 
	169, 1, 11, 18, 11, 12, 1, 11, 
	18, 170, 11, 168, 169, 1, 11, 18, 
	11, 169, 12, 1, 157, 158, 159, 171, 
	157, 158, 158, 158, 1, 157, 158, 159, 
	172, 157, 158, 158, 158, 1, 157, 158, 
	159, 173, 157, 158, 158, 158, 1, 157, 
	158, 159, 174, 157, 158, 158, 158, 1, 
	175, 158, 159, 175, 158, 158, 158, 1, 
	176, 49, 178, 179, 180, 181, 182, 183, 
	184, 176, 177, 49, 49, 1, 186, 185, 
	52, 53, 54, 185, 187, 52, 52, 1, 
	188, 2, 4, 5, 6, 7, 8, 9, 
	10, 188, 1, 0, 2, 4, 5, 6, 
	7, 8, 9, 10, 0, 1, 157, 158, 
	159, 189, 157, 158, 158, 158, 1, 190, 
	158, 159, 190, 158, 158, 158, 1, 191, 
	4, 5, 6, 7, 8, 9, 57, 10, 
	191, 3, 1, 157, 158, 159, 192, 157, 
	158, 158, 158, 1, 193, 158, 159, 193, 
	158, 158, 158, 1, 194, 4, 5, 6, 
	7, 8, 9, 10, 194, 195, 1, 196, 
	196, 197, 1, 198, 49, 178, 179, 180, 
	181, 182, 183, 184, 198, 49, 49, 49, 
	1, 200, 199, 52, 53, 54, 199, 52, 
	52, 52, 1, 201, 16, 2, 201, 15, 
	17, 1, 202, 16, 2, 202, 15, 17, 
	1, 202, 166, 2, 4, 5, 6, 7, 
	8, 9, 10, 202, 165, 167, 1, 161, 
	158, 203, 161, 204, 158, 158, 1, 157, 
	158, 206, 157, 205, 207, 158, 158, 1, 
	157, 158, 208, 157, 207, 158, 158, 1, 
	157, 158, 210, 157, 209, 211, 158, 158, 
	1, 157, 158, 212, 157, 211, 158, 158, 
	1, 157, 158, 214, 157, 213, 215, 158, 
	158, 1, 217, 216, 158, 159, 33, 216, 
	215, 158, 158, 1, 218, 2, 4, 5, 
	6, 7, 8, 9, 10, 218, 3, 1, 
	157, 158, 159, 219, 157, 158, 158, 158, 
	1, 157, 158, 159, 220, 157, 158, 158, 
	158, 1, 157, 158, 159, 221, 157, 158, 
	158, 158, 1, 157, 158, 159, 222, 157, 
	158, 158, 158, 1, 157, 158, 159, 223, 
	157, 158, 158, 158, 1, 224, 158, 159, 
	224, 158, 158, 158, 1, 225, 126, 4, 
	5, 6, 7, 8, 9, 10, 225, 3, 
	1, 226, 226, 226, 226, 1, 226, 227, 
	226, 226, 226, 1, 228, 1, 229, 230, 
	1, 231, 1, 232, 1, 233, 234, 233, 
	1, 235, 237, 238, 235, 236, 1, 239, 
	239, 240, 1, 241, 237, 238, 241, 1, 
	242, 1, 243, 243, 1, 243, 238, 243, 
	1, 244, 1, 245, 1, 246, 246, 1, 
	246, 246, 247, 1, 248, 248, 249, 1, 
	250, 250, 251, 1, 252, 252, 253, 1, 
	254, 254, 255, 1, 256, 256, 257, 1, 
	258, 259, 260, 258, 259, 259, 259, 1, 
	262, 261, 263, 264, 265, 261, 263, 263, 
	263, 1, 262, 261, 263, 265, 261, 263, 
	263, 263, 1, 262, 261, 265, 261, 1, 
	266, 266, 266, 266, 1, 233, 266, 267, 
	233, 266, 266, 266, 1, 233, 266, 233, 
	266, 266, 266, 1, 231, 1, 217, 216, 
	158, 159, 33, 216, 268, 158, 158, 1, 
	217, 216, 158, 159, 33, 216, 158, 158, 
	158, 1, 217, 216, 158, 159, 269, 33, 
	216, 215, 268, 158, 158, 1, 217, 216, 
	158, 159, 33, 216, 268, 158, 158, 158, 
	1, 157, 158, 212, 157, 270, 158, 158, 
	1, 157, 158, 212, 157, 158, 158, 158, 
	1, 157, 158, 212, 271, 157, 211, 270, 
	158, 158, 1, 157, 158, 212, 157, 270, 
	158, 158, 158, 1, 157, 158, 208, 157, 
	272, 158, 158, 1, 157, 158, 208, 157, 
	158, 158, 158, 1, 157, 158, 208, 273, 
	157, 207, 272, 158, 158, 1, 157, 158, 
	208, 157, 272, 158, 158, 158, 1, 161, 
	158, 203, 161, 274, 158, 158, 1, 161, 
	158, 203, 161, 162, 158, 158, 1, 161, 
	158, 203, 275, 161, 204, 274, 158, 158, 
	1, 161, 158, 203, 161, 274, 162, 158, 
	158, 1, 157, 158, 203, 157, 276, 158, 
	158, 1, 157, 158, 203, 157, 277, 158, 
	158, 1, 157, 158, 203, 157, 158, 158, 
	158, 1, 157, 158, 203, 278, 157, 276, 
	277, 158, 158, 1, 157, 158, 203, 157, 
	277, 158, 158, 158, 1, 51, 50, 52, 
	53, 54, 279, 50, 52, 52, 52, 1, 
	51, 50, 52, 53, 54, 280, 50, 52, 
	52, 52, 1, 51, 50, 52, 53, 54, 
	281, 50, 52, 52, 52, 1, 51, 50, 
	52, 53, 54, 282, 50, 52, 52, 52, 
	1, 284, 283, 52, 53, 54, 283, 52, 
	52, 52, 1, 285, 49, 2, 285, 49, 
	49, 49, 1, 286, 49, 2, 286, 49, 
	49, 49, 1, 286, 49, 2, 178, 179, 
	180, 181, 182, 183, 184, 286, 177, 49, 
	49, 1, 51, 50, 52, 53, 54, 287, 
	50, 52, 52, 52, 1, 289, 288, 52, 
	53, 54, 288, 52, 52, 52, 1, 290, 
	2, 4, 5, 7, 8, 9, 57, 10, 
	290, 1, 291, 2, 4, 5, 7, 8, 
	9, 57, 10, 291, 1, 291, 2, 4, 
	5, 6, 7, 8, 9, 57, 10, 291, 
	3, 1, 157, 158, 159, 292, 157, 158, 
	158, 158, 1, 157, 158, 159, 293, 157, 
	158, 158, 158, 1, 294, 158, 159, 294, 
	158, 158, 158, 1, 295, 69, 297, 298, 
	299, 300, 301, 302, 303, 295, 296, 69, 
	69, 1, 304, 71, 72, 304, 305, 71, 
	71, 1, 306, 74, 307, 308, 309, 310, 
	311, 312, 313, 306, 74, 74, 74, 1, 
	314, 76, 77, 314, 76, 76, 76, 1, 
	315, 79, 16, 315, 15, 17, 1, 75, 
	76, 77, 316, 75, 76, 76, 76, 1, 
	75, 76, 77, 317, 75, 76, 76, 76, 
	1, 75, 76, 77, 318, 75, 76, 76, 
	76, 1, 75, 76, 77, 319, 75, 76, 
	76, 76, 1, 320, 76, 77, 320, 76, 
	76, 76, 1, 321, 79, 49, 321, 49, 
	49, 49, 1, 75, 76, 77, 322, 75, 
	76, 76, 76, 1, 323, 76, 77, 323, 
	76, 76, 76, 1, 324, 79, 4, 5, 
	7, 8, 9, 57, 10, 324, 1, 75, 
	76, 77, 325, 75, 76, 76, 76, 1, 
	326, 76, 77, 326, 76, 76, 76, 1, 
	327, 79, 327, 60, 1, 75, 76, 77, 
	328, 75, 76, 76, 76, 1, 75, 76, 
	77, 329, 75, 76, 76, 76, 1, 75, 
	76, 77, 330, 75, 76, 76, 76, 1, 
	75, 76, 77, 331, 75, 76, 76, 76, 
	1, 75, 76, 77, 332, 75, 76, 76, 
	76, 1, 333, 76, 77, 333, 76, 76, 
	76, 1, 334, 126, 79, 334, 1, 335, 
	71, 72, 335, 71, 71, 71, 1, 336, 
	74, 338, 336, 337, 339, 74, 74, 1, 
	75, 76, 340, 75, 341, 76, 76, 1, 
	75, 76, 343, 75, 342, 344, 76, 76, 
	1, 75, 76, 345, 75, 344, 76, 76, 
	1, 75, 76, 347, 75, 346, 348, 76, 
	76, 1, 75, 76, 349, 75, 348, 76, 
	76, 1, 75, 76, 351, 75, 350, 352, 
	76, 76, 1, 354, 353, 76, 77, 33, 
	353, 352, 76, 76, 1, 355, 79, 2, 
	355, 1, 356, 79, 2, 356, 1, 356, 
	79, 2, 4, 5, 6, 7, 8, 9, 
	10, 356, 3, 1, 354, 353, 76, 77, 
	33, 353, 357, 76, 76, 1, 354, 353, 
	76, 77, 33, 353, 76, 76, 76, 1, 
	354, 353, 76, 77, 358, 33, 353, 352, 
	357, 76, 76, 1, 354, 353, 76, 77, 
	33, 353, 357, 76, 76, 76, 1, 75, 
	76, 349, 75, 359, 76, 76, 1, 75, 
	76, 349, 75, 76, 76, 76, 1, 75, 
	76, 349, 360, 75, 348, 359, 76, 76, 
	1, 75, 76, 349, 75, 359, 76, 76, 
	76, 1, 75, 76, 345, 75, 361, 76, 
	76, 1, 75, 76, 345, 75, 76, 76, 
	76, 1, 75, 76, 345, 362, 75, 344, 
	361, 76, 76, 1, 75, 76, 345, 75, 
	361, 76, 76, 76, 1, 75, 76, 340, 
	75, 363, 76, 76, 1, 75, 76, 340, 
	75, 76, 76, 76, 1, 75, 76, 340, 
	364, 75, 341, 363, 76, 76, 1, 75, 
	76, 340, 75, 363, 76, 76, 76, 1, 
	70, 71, 72, 365, 70, 71, 71, 71, 
	1, 70, 71, 72, 366, 70, 71, 71, 
	71, 1, 70, 71, 72, 367, 70, 71, 
	71, 71, 1, 70, 71, 72, 368, 70, 
	71, 71, 71, 1, 369, 71, 72, 369, 
	71, 71, 71, 1, 370, 371, 370, 371, 
	371, 371, 1, 373, 372, 374, 375, 54, 
	372, 374, 374, 374, 1, 373, 372, 374, 
	54, 372, 374, 374, 374, 1, 70, 71, 
	72, 376, 70, 71, 71, 71, 1, 377, 
	71, 72, 377, 71, 71, 71, 1, 378, 
	74, 307, 308, 310, 311, 312, 379, 313, 
	378, 74, 74, 74, 1, 75, 76, 77, 
	380, 75, 76, 76, 76, 1, 75, 76, 
	77, 381, 75, 76, 76, 76, 1, 382, 
	76, 77, 382, 76, 76, 76, 1, 383, 
	79, 69, 383, 69, 69, 69, 1, 70, 
	71, 72, 384, 70, 71, 71, 71, 1, 
	385, 71, 72, 385, 71, 71, 71, 1, 
	386, 74, 386, 387, 74, 74, 1, 388, 
	76, 77, 388, 389, 76, 76, 1, 70, 
	71, 72, 390, 70, 71, 71, 71, 1, 
	70, 71, 72, 391, 70, 71, 71, 71, 
	1, 70, 71, 72, 392, 70, 71, 71, 
	71, 1, 70, 71, 72, 393, 70, 71, 
	71, 71, 1, 70, 71, 72, 394, 70, 
	71, 71, 71, 1, 395, 71, 72, 395, 
	71, 71, 71, 1, 396, 126, 74, 396, 
	74, 74, 74, 1, 51, 50, 52, 53, 
	54, 397, 50, 52, 52, 52, 1, 399, 
	398, 52, 53, 54, 398, 52, 52, 52, 
	1, 400, 2, 400, 60, 1, 401, 2, 
	401, 60, 1, 401, 2, 4, 5, 6, 
	7, 8, 9, 10, 401, 195, 1, 402, 
	158, 159, 402, 403, 158, 158, 1, 404, 
	158, 159, 404, 405, 158, 158, 1, 51, 
	50, 52, 53, 54, 406, 50, 52, 52, 
	52, 1, 51, 50, 52, 53, 54, 407, 
	50, 52, 52, 52, 1, 51, 50, 52, 
	53, 54, 408, 50, 52, 52, 52, 1, 
	51, 50, 52, 53, 54, 409, 50, 52, 
	52, 52, 1, 51, 50, 52, 53, 54, 
	410, 50, 52, 52, 52, 1, 412, 411, 
	52, 53, 54, 411, 52, 52, 52, 1, 
	413, 126, 2, 413, 1, 414, 126, 2, 
	414, 1, 414, 126, 2, 4, 5, 6, 
	7, 8, 9, 10, 414, 3, 1, 416, 
	415, 417, 418, 54, 415, 417, 417, 417, 
	1, 416, 415, 417, 54, 415, 417, 417, 
	417, 1, 420, 419, 417, 418, 54, 419, 
	421, 417, 417, 1, 423, 422, 417, 418, 
	54, 422, 417, 417, 417, 1, 424, 166, 
	2, 4, 5, 6, 7, 8, 9, 10, 
	424, 165, 167, 1, 416, 415, 417, 418, 
	54, 425, 415, 417, 417, 417, 1, 416, 
	415, 417, 418, 54, 426, 415, 417, 417, 
	417, 1, 416, 415, 417, 418, 54, 427, 
	415, 417, 417, 417, 1, 416, 415, 417, 
	418, 54, 428, 415, 417, 417, 417, 1, 
	430, 429, 417, 418, 54, 429, 417, 417, 
	417, 1, 431, 49, 2, 178, 179, 180, 
	181, 182, 183, 184, 431, 177, 49, 49, 
	1, 416, 415, 417, 418, 54, 432, 415, 
	417, 417, 417, 1, 434, 433, 417, 418, 
	54, 433, 417, 417, 417, 1, 435, 2, 
	4, 5, 6, 7, 8, 9, 57, 10, 
	435, 3, 1, 416, 415, 417, 418, 54, 
	436, 415, 417, 417, 417, 1, 438, 437, 
	417, 418, 54, 437, 417, 417, 417, 1, 
	439, 2, 4, 5, 6, 7, 8, 9, 
	10, 439, 195, 1, 416, 415, 417, 418, 
	54, 440, 415, 417, 417, 417, 1, 416, 
	415, 417, 418, 54, 441, 415, 417, 417, 
	417, 1, 416, 415, 417, 418, 54, 442, 
	415, 417, 417, 417, 1, 416, 415, 417, 
	418, 54, 443, 415, 417, 417, 417, 1, 
	416, 415, 417, 418, 54, 444, 415, 417, 
	417, 417, 1, 446, 445, 417, 418, 54, 
	445, 417, 417, 417, 1, 447, 126, 2, 
	4, 5, 6, 7, 8, 9, 10, 447, 
	3, 1, 449, 448, 450, 451, 2, 452, 
	453, 448, 451, 451, 451, 1, 455, 454, 
	450, 451, 2, 452, 453, 454, 451, 451, 
	451, 1, 455, 454, 450, 451, 2, 452, 
	457, 458, 459, 460, 461, 462, 463, 453, 
	454, 456, 451, 451, 1, 465, 464, 450, 
	451, 2, 452, 457, 458, 459, 460, 461, 
	462, 463, 453, 464, 451, 451, 451, 1, 
	455, 454, 450, 451, 2, 452, 457, 458, 
	459, 460, 461, 462, 463, 453, 454, 451, 
	451, 451, 1, 467, 466, 450, 451, 469, 
	2, 452, 453, 466, 468, 470, 451, 451, 
	1, 472, 471, 450, 451, 469, 2, 452, 
	453, 471, 468, 470, 451, 451, 1, 472, 
	471, 450, 451, 474, 2, 452, 457, 458, 
	459, 460, 461, 462, 463, 453, 471, 473, 
	475, 451, 451, 1, 477, 476, 450, 451, 
	2, 452, 457, 458, 459, 460, 461, 462, 
	463, 453, 476, 456, 451, 451, 1, 479, 
	478, 450, 480, 2, 452, 453, 478, 480, 
	480, 480, 1, 482, 481, 450, 451, 2, 
	452, 457, 458, 460, 461, 462, 483, 463, 
	453, 481, 451, 451, 451, 1, 485, 484, 
	450, 451, 2, 452, 457, 458, 460, 461, 
	462, 483, 463, 453, 484, 451, 451, 451, 
	1, 485, 484, 450, 451, 2, 452, 457, 
	458, 459, 460, 461, 462, 483, 463, 453, 
	484, 456, 451, 451, 1, 487, 486, 450, 
	79, 451, 2, 452, 453, 486, 451, 451, 
	451, 1, 489, 488, 450, 79, 451, 2, 
	452, 453, 488, 451, 451, 451, 1, 489, 
	488, 450, 79, 451, 2, 452, 457, 458, 
	459, 460, 461, 462, 463, 453, 488, 456, 
	451, 451, 1, 491, 490, 450, 451, 2, 
	452, 453, 490, 492, 451, 451, 1, 494, 
	493, 450, 451, 2, 452, 453, 493, 492, 
	451, 451, 1, 494, 493, 450, 451, 2, 
	452, 457, 458, 459, 460, 461, 462, 463, 
	453, 493, 495, 451, 451, 1, 497, 496, 
	126, 450, 451, 2, 452, 453, 496, 451, 
	451, 451, 1, 499, 498, 126, 450, 451, 
	2, 452, 453, 498, 451, 451, 451, 1, 
	499, 498, 126, 450, 451, 2, 452, 457, 
	458, 459, 460, 461, 462, 463, 453, 498, 
	456, 451, 451, 1, 501, 500, 450, 480, 
	2, 452, 453, 500, 480, 480, 480, 1, 
	501, 500, 450, 480, 2, 452, 503, 504, 
	505, 506, 507, 508, 509, 453, 500, 502, 
	480, 480, 1, 511, 510, 450, 451, 474, 
	2, 452, 457, 458, 459, 460, 461, 462, 
	463, 453, 510, 473, 475, 451, 451, 1, 
	513, 512, 450, 480, 2, 452, 503, 504, 
	505, 506, 507, 508, 509, 453, 512, 502, 
	480, 480, 1, 515, 514, 450, 451, 2, 
	452, 457, 458, 459, 460, 461, 462, 483, 
	463, 453, 514, 456, 451, 451, 1, 517, 
	516, 450, 451, 2, 452, 457, 458, 459, 
	460, 461, 462, 463, 453, 516, 495, 451, 
	451, 1, 519, 518, 126, 450, 451, 2, 
	452, 457, 458, 459, 460, 461, 462, 463, 
	453, 518, 456, 451, 451, 1, 0
]

class << self
	attr_accessor :_bind_parser_trans_targs
	private :_bind_parser_trans_targs, :_bind_parser_trans_targs=
end
self._bind_parser_trans_targs = [
	2, 0, 15, 3, 5, 32, 40, 43, 
	47, 48, 84, 4, 3, 4, 6, 7, 
	30, 28, 8, 28, 9, 26, 24, 10, 
	11, 22, 20, 12, 13, 18, 16, 14, 
	341, 15, 14, 341, 17, 19, 21, 23, 
	25, 27, 29, 31, 33, 34, 35, 36, 
	37, 38, 14, 341, 38, 39, 15, 41, 
	42, 50, 44, 45, 46, 37, 46, 36, 
	49, 36, 51, 52, 53, 54, 55, 54, 
	83, 55, 56, 57, 56, 82, 57, 58, 
	59, 60, 60, 59, 79, 60, 61, 79, 
	62, 62, 61, 76, 62, 63, 76, 64, 
	64, 63, 73, 64, 65, 73, 66, 66, 
	65, 70, 66, 67, 70, 68, 69, 67, 
	68, 69, 341, 71, 72, 74, 75, 77, 
	78, 80, 81, 85, 86, 87, 88, 88, 
	89, 90, 14, 341, 15, 91, 92, 94, 
	103, 95, 96, 97, 98, 99, 100, 101, 
	14, 341, 101, 102, 15, 104, 105, 106, 
	107, 14, 341, 107, 15, 109, 108, 110, 
	109, 109, 111, 114, 114, 115, 118, 116, 
	116, 117, 119, 121, 122, 123, 124, 125, 
	125, 126, 137, 207, 215, 301, 308, 309, 
	311, 127, 344, 126, 127, 130, 131, 131, 
	133, 134, 134, 135, 136, 135, 136, 138, 
	346, 138, 140, 142, 198, 143, 196, 194, 
	144, 145, 192, 190, 146, 147, 188, 186, 
	148, 349, 148, 124, 151, 124, 153, 154, 
	155, 155, 157, 158, 159, 160, 185, 161, 
	162, 163, 182, 163, 164, 166, 169, 165, 
	164, 165, 167, 168, 170, 171, 172, 173, 
	174, 173, 174, 175, 176, 175, 176, 177, 
	178, 177, 178, 179, 181, 14, 341, 179, 
	180, 15, 183, 184, 187, 189, 191, 193, 
	195, 197, 199, 201, 203, 204, 206, 208, 
	209, 210, 211, 212, 350, 212, 214, 216, 
	217, 351, 217, 219, 221, 222, 223, 223, 
	224, 247, 275, 283, 290, 294, 295, 297, 
	225, 224, 225, 226, 228, 234, 237, 240, 
	241, 243, 227, 227, 229, 230, 231, 232, 
	233, 233, 235, 236, 236, 238, 239, 239, 
	232, 242, 232, 244, 245, 246, 246, 248, 
	248, 249, 273, 271, 250, 271, 251, 269, 
	267, 252, 253, 265, 263, 254, 255, 261, 
	259, 256, 354, 256, 258, 260, 262, 264, 
	266, 268, 270, 272, 274, 276, 277, 278, 
	279, 280, 280, 281, 256, 354, 281, 282, 
	284, 285, 285, 286, 287, 288, 289, 289, 
	291, 292, 292, 293, 233, 293, 279, 296, 
	279, 298, 299, 300, 300, 302, 303, 357, 
	303, 305, 125, 306, 125, 307, 211, 310, 
	211, 312, 313, 314, 360, 314, 316, 148, 
	349, 317, 318, 148, 349, 319, 321, 365, 
	321, 323, 324, 325, 326, 327, 366, 327, 
	329, 330, 367, 330, 332, 333, 368, 333, 
	326, 336, 326, 338, 339, 340, 369, 340, 
	1, 342, 93, 108, 112, 156, 2, 343, 
	111, 113, 120, 129, 132, 149, 150, 152, 
	128, 345, 139, 347, 202, 205, 203, 140, 
	348, 141, 200, 198, 2, 343, 213, 363, 
	317, 218, 352, 220, 219, 353, 257, 355, 
	258, 356, 304, 358, 307, 305, 359, 306, 
	315, 361, 316, 362, 214, 364, 319, 320, 
	322, 328, 331, 334, 335, 337, 140, 348, 
	214, 364, 219, 353, 305, 359, 316, 362
]

class << self
	attr_accessor :_bind_parser_trans_actions
	private :_bind_parser_trans_actions, :_bind_parser_trans_actions=
end
self._bind_parser_trans_actions = [
	25, 0, 0, 55, 37, 0, 0, 0, 
	0, 0, 0, 7, 1, 0, 0, 3, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 33, 
	106, 33, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 51, 
	0, 3, 35, 115, 0, 0, 35, 0, 
	0, 0, 41, 0, 55, 5, 1, 39, 
	0, 45, 0, 47, 0, 3, 35, 0, 
	0, 0, 3, 29, 0, 0, 0, 0, 
	55, 15, 70, 1, 15, 0, 55, 0, 
	17, 73, 1, 17, 0, 55, 0, 19, 
	76, 1, 19, 0, 55, 0, 21, 79, 
	1, 21, 0, 55, 0, 23, 23, 1, 
	0, 0, 53, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 43, 0, 3, 0, 
	0, 0, 31, 100, 31, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 3, 
	112, 153, 0, 0, 112, 0, 0, 0, 
	55, 67, 129, 1, 67, 25, 0, 0, 
	0, 88, 1, 25, 0, 121, 121, 121, 
	1, 1, 1, 0, 0, 0, 51, 25, 
	0, 121, 118, 3, 3, 3, 3, 3, 
	3, 64, 125, 1, 0, 0, 25, 0, 
	41, 25, 0, 55, 61, 1, 0, 35, 
	115, 0, 25, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	91, 141, 0, 39, 0, 45, 0, 43, 
	25, 0, 0, 0, 0, 0, 0, 0, 
	0, 25, 0, 0, 55, 0, 0, 7, 
	1, 0, 0, 0, 0, 49, 0, 55, 
	9, 1, 0, 55, 11, 1, 0, 55, 
	13, 1, 0, 3, 3, 27, 97, 0, 
	0, 27, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 51, 35, 115, 0, 25, 0, 
	35, 115, 0, 25, 0, 47, 25, 0, 
	121, 118, 3, 3, 3, 3, 3, 3, 
	64, 1, 0, 118, 3, 3, 3, 3, 
	3, 3, 29, 0, 0, 0, 0, 51, 
	29, 0, 0, 29, 0, 41, 29, 0, 
	39, 0, 45, 0, 43, 29, 0, 35, 
	0, 3, 3, 3, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 103, 149, 0, 25, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	51, 35, 0, 3, 109, 157, 0, 0, 
	0, 35, 0, 3, 0, 47, 29, 0, 
	41, 35, 0, 121, 58, 1, 39, 0, 
	45, 0, 43, 35, 0, 41, 35, 115, 
	0, 25, 133, 1, 85, 1, 39, 0, 
	45, 0, 43, 35, 115, 0, 25, 94, 
	145, 0, 0, 137, 161, 1, 94, 145, 
	0, 0, 0, 0, 51, 94, 145, 0, 
	0, 94, 145, 0, 41, 94, 145, 0, 
	39, 0, 45, 0, 43, 94, 145, 0, 
	3, 3, 0, 3, 3, 3, 82, 82, 
	121, 118, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 82, 
	82, 121, 121, 121, 3, 3, 3, 3, 
	3, 3, 3, 3, 82, 82, 3, 3, 
	82, 82, 3, 3, 121, 82, 82, 121, 
	3, 3, 82, 82, 82, 82, 121, 118, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3
]

class << self
	attr_accessor :bind_parser_start
end
self.bind_parser_start = 341;
class << self
	attr_accessor :bind_parser_first_final
end
self.bind_parser_first_final = 341;
class << self
	attr_accessor :bind_parser_error
end
self.bind_parser_error = 0;

class << self
	attr_accessor :bind_parser_en_main
end
self.bind_parser_en_main = 341;


# line 109 "lib/bind/zone_parser.rl"
      
# line 1272 "lib/bind/zone_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = bind_parser_start
end

# line 110 "lib/bind/zone_parser.rl"
      
# line 1281 "lib/bind/zone_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _bind_parser_key_offsets[cs]
	_trans = _bind_parser_index_offsets[cs]
	_klen = _bind_parser_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _bind_parser_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _bind_parser_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _bind_parser_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _bind_parser_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _bind_parser_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _bind_parser_indicies[_trans]
	cs = _bind_parser_trans_targs[_trans]
	if _bind_parser_trans_actions[_trans] != 0
		_acts = _bind_parser_trans_actions[_trans]
		_nacts = _bind_parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _bind_parser_actions[_acts - 1]
when 0 then
# line 4 "lib/bind/zone_parser.rl"
		begin
 num = (num * 10) + (data[p] - ?0) 		end
# line 4 "lib/bind/zone_parser.rl"
when 1 then
# line 5 "lib/bind/zone_parser.rl"
		begin
 num = 0 		end
# line 5 "lib/bind/zone_parser.rl"
when 2 then
# line 6 "lib/bind/zone_parser.rl"
		begin
 str_p = p 		end
# line 6 "lib/bind/zone_parser.rl"
when 3 then
# line 8 "lib/bind/zone_parser.rl"
		begin
 record[:dist] = num 		end
# line 8 "lib/bind/zone_parser.rl"
when 4 then
# line 9 "lib/bind/zone_parser.rl"
		begin
 record[:ttl] = num 		end
# line 9 "lib/bind/zone_parser.rl"
when 5 then
# line 10 "lib/bind/zone_parser.rl"
		begin
 record[:priority] = num 		end
# line 10 "lib/bind/zone_parser.rl"
when 6 then
# line 11 "lib/bind/zone_parser.rl"
		begin
 record[:weight] = num 		end
# line 11 "lib/bind/zone_parser.rl"
when 7 then
# line 12 "lib/bind/zone_parser.rl"
		begin
 record[:port] = num 		end
# line 12 "lib/bind/zone_parser.rl"
when 8 then
# line 13 "lib/bind/zone_parser.rl"
		begin
 record[:serial] = num 		end
# line 13 "lib/bind/zone_parser.rl"
when 9 then
# line 14 "lib/bind/zone_parser.rl"
		begin
 record[:refresh] = num 		end
# line 14 "lib/bind/zone_parser.rl"
when 10 then
# line 15 "lib/bind/zone_parser.rl"
		begin
 record[:retry] = num 		end
# line 15 "lib/bind/zone_parser.rl"
when 11 then
# line 16 "lib/bind/zone_parser.rl"
		begin
 record[:expire] = num 		end
# line 16 "lib/bind/zone_parser.rl"
when 12 then
# line 17 "lib/bind/zone_parser.rl"
		begin
 record[:minimum] = num 		end
# line 17 "lib/bind/zone_parser.rl"
when 13 then
# line 19 "lib/bind/zone_parser.rl"
		begin
 record[:owner] = data[str_p..p].pack('c*').strip 		end
# line 19 "lib/bind/zone_parser.rl"
when 14 then
# line 20 "lib/bind/zone_parser.rl"
		begin
 record[:target] = data[str_p..p].pack('c*').strip 		end
# line 20 "lib/bind/zone_parser.rl"
when 15 then
# line 21 "lib/bind/zone_parser.rl"
		begin
 record[:mbox] = data[str_p..p].pack('c*').strip 		end
# line 21 "lib/bind/zone_parser.rl"
when 16 then
# line 22 "lib/bind/zone_parser.rl"
		begin
 record[:text] = data[(str_p+1)..(p-2)].pack('c*').strip 		end
# line 22 "lib/bind/zone_parser.rl"
when 17 then
# line 23 "lib/bind/zone_parser.rl"
		begin
 record[:address] = data[str_p..p].pack('c*').strip 		end
# line 23 "lib/bind/zone_parser.rl"
when 18 then
# line 24 "lib/bind/zone_parser.rl"
		begin
 record[:domain] = data[str_p..p].pack('c*').strip 		end
# line 24 "lib/bind/zone_parser.rl"
when 19 then
# line 26 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :a 		end
# line 26 "lib/bind/zone_parser.rl"
when 20 then
# line 27 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :ns 		end
# line 27 "lib/bind/zone_parser.rl"
when 21 then
# line 28 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :mx 		end
# line 28 "lib/bind/zone_parser.rl"
when 22 then
# line 29 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :txt 		end
# line 29 "lib/bind/zone_parser.rl"
when 23 then
# line 30 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :ptr 		end
# line 30 "lib/bind/zone_parser.rl"
when 24 then
# line 31 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :soa 		end
# line 31 "lib/bind/zone_parser.rl"
when 25 then
# line 32 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :srv 		end
# line 32 "lib/bind/zone_parser.rl"
when 26 then
# line 33 "lib/bind/zone_parser.rl"
		begin
 record[:type] = :cname 		end
# line 33 "lib/bind/zone_parser.rl"
when 27 then
# line 35 "lib/bind/zone_parser.rl"
		begin
 @ttl = record[:ttl] 		end
# line 35 "lib/bind/zone_parser.rl"
when 28 then
# line 36 "lib/bind/zone_parser.rl"
		begin
 @origin = record[:domain] 		end
# line 36 "lib/bind/zone_parser.rl"
when 29 then
# line 41 "lib/bind/zone_parser.rl"
		begin
 records << record; record = Hash.new 		end
# line 41 "lib/bind/zone_parser.rl"
# line 1512 "lib/bind/zone_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 111 "lib/bind/zone_parser.rl"

      return records if p == pe && cs == bind_parser_first_final
      raise "cs: #{cs} p: #{p} pe: #{pe} data[p]: #{data[p] ? data[p].chr.inspect : 'nil'}"
    end
  end
end
